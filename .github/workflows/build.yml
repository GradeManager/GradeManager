name: Build and Deploy Executables

on:
  push:
    branches:
      - main

jobs:
  build_apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout app repository
        uses: actions/checkout@v3

      - name: Prepare keystore
        run: echo '${{ secrets.KEYSTORE }}' | base64 --decode > release-key.jks

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: 'stable'

      - name: Update Flutter and get dependencies
        run: |
          flutter upgrade
          flutter pub get

      - name: Sign and build APK
        run: |
          echo ${{ secrets.KEYSTORE_BASE64 }} | base64 --decode > android/app/keystore.jks
          flutter build apk --release --dart-define=keystorePassword=${{ secrets.KEYSTORE_PASSWORD }} --dart-define=keyAlias=${{ secrets.KEY_ALIAS }} --dart-define=keyPassword=${{ secrets.KEY_PASSWORD }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v3
        with:
          name: android_grademanager.apk
          path: build/app/outputs/apk/release/app-release.apk

  build_windows_exe:
    runs-on: windows-latest
    steps:
      - name: Checkout app repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'

      - name: Build Windows executable
        run: |
          flutter upgrade
          flutter config --enable-windows-desktop
          flutter build windows --release

      - name: Install Inno Setup
        run: |
          choco install innosetup

      - name: Run Inno Setup script
        shell: cmd
        run: |
          "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss

      - name: Upload Windows installer as artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows_grademanager.exe
          path: GradeManagerSetup.exe

  build_linux_exe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout app repository
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.0.0'
          channel: 'stable'

      - name: Build Linux executable
        run: |
          flutter upgrade
          flutter config --enable-linux-desktop
          flutter build linux --release

      - name: Zip Linux executable and resources
        run: |
          zip -r linux_grademanager.zip build/linux/x64/release/bundle

      - name: Upload Linux zip
        uses: actions/upload-artifact@v3
        with:
          name: linux_grademanager
          path: linux_grademanager.zip

  deploy_executables:
    needs: [build_apk, build_windows_exe, build_linux_exe]
    runs-on: ubuntu-latest
    steps:
      - name: Download APK artifacts
        uses: actions/download-artifact@v3
        with:
          name: android_grademanager.apk

      - name: Download Windows installer artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows_grademanager.exe

      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux_grademanager

      - name: Checkout website repository
        uses: actions/checkout@v3
        with:
          repository: GradeManager/Website
          token: ${{ secrets.BOT_ACCESS_TOKEN }}
          path: website

      - name: Deploy executables to website repository
        run: |
          ls
          cp app-release.apk website/software/grademanager.apk
          cp GradeManagerSetup.exe website/software/GradeManagerSetup.exe
          cp linux_grademanager.zip website/software/grademanager.zip
          
          git config --global user.email "grademanager@gmx.ch"
          cd website
          git add software/grademanager.apk software/GradeManagerSetup.exe software/grademanager.zip
          git commit -m "Update app executables"
          git push